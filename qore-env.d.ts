// [WARNING] This file is generated by running `$ qore codegen` on your root project, please do not edit

/// <reference types="@feedloop/qore-client" />
import { QoreSchema } from "@feedloop/qore-client";

declare module "@feedloop/qore-client" {
  type RepositoryTableRow = {
    id: string;
    name: string;
    summary: string;
    content: string;
    photoUrl: string;
    author: AuthorTableRow;
    createdAt: Date;
    demoUrl: string;
    gitRepoUrl: string;
    authorName: string;
    category: CategoryTableRow;
    categoryName: string;
    authorPhotoUrl: string;
  };

  type CategoryTableRow = {
    id: string;
    name: string;
    description: string;
    repository1: { nodes: Repository1TableRow[] };
  };

  type MemberTableRow = {
    id: string;
    email: string;
    role: { id: string; displayField: string };
    repository: { nodes: RepositoryTableRow[] };
    password: string;
    photoUrl: string;
    name: string;
  };

  type AllMemberViewRow = {
    read: {
      id: string;
      email: string;
      role: { id: string; displayField: string };
      password: string;
      photoUrl: string;
      name: string;
    };
    write: {
      email: string;
      password: string;
      photoUrl: string;
      name: string;
    };
    params: {};
    actions: {};
  };

  type AllRepositoryViewRow = {
    read: {
      id: string;
      name: string;
      summary: string;
      content: string;
      photoUrl: string;
      author: AuthorTableRow;
      createdAt: Date;
      demoUrl: string;
      gitRepoUrl: string;
      authorName: string;
      category: CategoryTableRow;
      categoryName: string;
      authorPhotoUrl: string;
    };
    write: {
      name: string;
      summary: string;
      content: string;
      photoUrl: string;
      author: string[];
      createdAt: Date;
      demoUrl: string;
      gitRepoUrl: string;
      category: string[];
    };
    params: {
      q?: string;
    };
    actions: {};
  };

  type AllCategoryViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
    };
    write: {
      name: string;
      description: string;
    };
    params: {};
    actions: {};
  };

  interface ProjectSchema extends QoreSchema {
    allMember: AllMemberViewRow;
    allRepository: AllRepositoryViewRow;
    allCategory: AllCategoryViewRow;
  }
}
